Egg drop. Suppose that you have an n-story building (with floors 1 through n) and plenty of eggs.
 An egg breaks if it is dropped from floor T or higher and does not break otherwise. Your goal is
to devise a strategy to determine the value of T given the following limitations on the number 
of eggs and tosses:

Version 0: 1 egg, ≤T tosses.
Version 1: ~1lgn eggs and ~1lgn tosses.
Version 2: ~lgT eggs and ~2lgT tosses.
Version 3: 2 eggs and ~2*√(n) tosses.
Version 4: 2 eggs and ≤c*√(T) tosses for some fixed constant c.


Version 0: linear testing first floor up to the floor, where the egg breaks.

Version 1: Use a binary search on the floors to isolate the floor where the egg brakes with 
1lgT complexity.

Version 2: use binary search again to find T = [ 2^(t-1), 2^t ] 
linear testing gradually from first floor up to floor 2^t 